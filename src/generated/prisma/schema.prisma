// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(cuid())
  email      String     @unique
  name       String
  tasks      Task[]
  categories Category[]
  createdAt  DateTime   @default(now())
}

model Task {
  id         String         @id @default(cuid())
  title      String
  userId     String
  user       User           @relation(fields: [userId], references: [id])
  categoryId String
  category   Category       @relation(fields: [categoryId], references: [id])
  breakdown  TaskBreakdown?
  status     TaskStatus     @default(PENDING)
  createdAt  DateTime       @default(now())
}

model TaskBreakdown {
  id        String   @id @default(cuid())
  content   String
  taskId    String   @unique
  task      Task     @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
}

model Category {
  id        String   @id @default(cuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  tasks     Task[]
  createdAt DateTime @default(now())

  @@unique([name, userId])
}

enum TaskStatus {
  PENDING
  COMPLETED
}
